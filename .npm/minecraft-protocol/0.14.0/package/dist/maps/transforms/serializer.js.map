{"version":3,"sources":["transforms/serializer.js"],"names":[],"mappings":"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","file":"transforms/serializer.js","sourcesContent":["var [readVarInt, writeVarInt, sizeOfVarInt] = require(\"../datatypes/utils\").varint;\nvar protocol = require(\"../protocol\");\nvar Transform = require(\"readable-stream\").Transform;\nvar debug = require(\"../debug\");\nvar assert = require('assert');\n\nmodule.exports.createSerializer = function(obj) {\n  return new Serializer(obj);\n};\n\nmodule.exports.createDeserializer = function(obj) {\n  return new Deserializer(obj);\n};\n\nmodule.exports.createPacketBuffer=createPacketBuffer;\nmodule.exports.parsePacketData=parsePacketData;\n\n// This is really just for the client.\nvar states = {\n  \"HANDSHAKING\": \"handshaking\",\n  \"STATUS\": \"status\",\n  \"LOGIN\": \"login\",\n  \"PLAY\": \"play\"\n};\nmodule.exports.states = states;\n\nmodule.exports.get = get;\n\n\n\nvar NMProtocols = require(\"../protocol\");\n\nvar numeric = require(\"../datatypes/numeric\");\nvar utils = require(\"../datatypes/utils\");\nvar minecraft = require(\"../datatypes/minecraft\");\nvar structures = require(\"../datatypes/structures\");\nvar conditional = require(\"../datatypes/conditional\");\n\nvar proto = new NMProtocols();\nproto.addTypes(numeric);\nproto.addTypes(utils);\nproto.addTypes(minecraft);\nproto.addTypes(structures);\nproto.addTypes(conditional);\n\n\nmodule.exports.types = proto.types;\n\nvar evalCondition = require(\"../utils\").evalCondition;\nvar packets = require(\"../../protocol/protocol\");\nvar readPackets = require(\"../packets\").readPackets;\nvar packetIndexes = readPackets(packets, states);\n\nvar packetFields = packetIndexes.packetFields;\nvar packetNames = packetIndexes.packetNames;\nvar packetIds = packetIndexes.packetIds;\nvar packetStates = packetIndexes.packetStates;\n\n\n// TODO : This does NOT contain the length prefix anymore.\nfunction createPacketBuffer(packetId, state, params, isServer) {\n  var length = 0;\n  if(typeof packetId === 'string' && typeof state !== 'string' && !params) {\n    // simplified two-argument usage, createPacketBuffer(name, params)\n    params = state;\n    state = packetStates[!isServer ? 'toServer' : 'toClient'][packetId];\n  }\n  if(typeof packetId === 'string') packetId = packetIds[state][!isServer ? 'toServer' : 'toClient'][packetId];\n  assert.notEqual(packetId, undefined);\n\n  var packet = get(packetId, state, !isServer);\n  assert.notEqual(packet, null);\n  packet.forEach(function(fieldInfo) {\n    try {\n      length += proto.sizeOf(params[fieldInfo.name], fieldInfo, params);\n    } catch(e) {\n      console.log(\"fieldInfo : \" + JSON.stringify(fieldInfo));\n      console.log(\"params : \" + JSON.stringify(params));\n      throw e;\n    }\n  });\n  length += utils.varint[2](packetId);\n  var size = length;// + utils.varint[2](length);\n  var buffer = new Buffer(size);\n  var offset = 0;//utils.varint[1](length, buffer, 0);\n  offset = utils.varint[1](packetId, buffer, offset);\n  packet.forEach(function(fieldInfo) {\n    var value = params[fieldInfo.name];\n    // TODO : A better check is probably needed\n    if(typeof value === \"undefined\" && fieldInfo.type != \"count\" && (fieldInfo.type != \"condition\" || evalCondition(fieldInfo.typeArgs, params)))\n      debug(new Error(\"Missing Property \" + fieldInfo.name).stack);\n    offset = proto.write(value, buffer, offset, fieldInfo, params);\n  });\n  return buffer;\n}\n\n\nfunction get(packetId, state, toServer) {\n  var direction = toServer ? \"toServer\" : \"toClient\";\n  var packetInfo = packetFields[state][direction][packetId];\n  if(!packetInfo) {\n    return null;\n  }\n  return packetInfo;\n}\n\n\n// By default, parse every packets.\nfunction parsePacketData(buffer, state, isServer, packetsToParse = {\"packet\": true}) {\n  var cursor = 0;\n  var packetIdField = utils.varint[0](buffer, cursor);\n  var packetId = packetIdField.value;\n  cursor += packetIdField.size;\n\n  var results = {id: packetId, state: state};\n  // Only parse the packet if there is a need for it, AKA if there is a listener attached to it\n  var name = packetNames[state][isServer ? \"toServer\" : \"toClient\"][packetId];\n  var shouldParse = (!packetsToParse.hasOwnProperty(name) || packetsToParse[name] <= 0)\n    && (!packetsToParse.hasOwnProperty(\"packet\") || packetsToParse[\"packet\"] <= 0);\n  if(shouldParse) {\n    return {\n      buffer: buffer,\n      results: results\n    };\n  }\n\n  var packetInfo = get(packetId, state, isServer);\n  if(packetInfo === null) {\n    return {\n      error: new Error(\"Unrecognized packetId: \" + packetId + \" (0x\" + packetId.toString(16) + \")\"),\n      buffer: buffer,\n      results: results\n    };\n  } else {\n    var packetName = packetNames[state][isServer ? \"toServer\" : \"toClient\"][packetId];\n    debug(\"read packetId \" + state + \".\" + packetName + \" (0x\" + packetId.toString(16) + \")\");\n  }\n\n  var i, fieldInfo, readResults;\n  for(i = 0; i < packetInfo.length; ++i) {\n    fieldInfo = packetInfo[i];\n    readResults = proto.read(buffer, cursor, fieldInfo, results);\n    /* A deserializer cannot return null anymore. Besides, proto.read() returns\n     * null when the condition is not fulfilled.\n     if (!!!readResults) {\n     var error = new Error(\"A deserializer returned null\");\n     error.packetId = packetId;\n     error.fieldInfo = fieldInfo.name;\n     return {\n     size: length + lengthField.size,\n     error: error,\n     results: results\n     };\n     }*/\n    // TODO : investigate readResults returning null : shouldn't happen.\n    // When there is not enough data to read, we should return an error.\n    // As a general rule, it would be a good idea to introduce a whole bunch\n    // of new error classes to differenciate the errors.\n    if(readResults === null || readResults.value == null) continue;\n    if(readResults.error) {\n      return readResults;\n    }\n    results[fieldInfo.name] = readResults.value;\n    cursor += readResults.size;\n  }\n  if(buffer.length > cursor)\n    debug(\"Too much data to read for packetId: \" + packetId + \" (0x\" + packetId.toString(16) + \")\");\n  debug(results);\n  return {\n    results: results,\n    buffer: buffer\n  };\n}\n\nclass Serializer extends Transform {\n  constructor({ state = states.HANDSHAKING, isServer = false } = {}) {\n    super({ writableObjectMode: true });\n    this.protocolState = state;\n    this.isServer = isServer;\n  }\n\n  // TODO : Might make sense to make createPacketBuffer async.\n  _transform(chunk, enc, cb) {\n    try {\n      var buf = createPacketBuffer(chunk.packetId, this.protocolState, chunk.params, this.isServer);\n      this.push(buf);\n      return cb();\n    } catch (e) {\n      return cb(e);\n    }\n  }\n}\n\nclass Deserializer extends Transform {\n  constructor({ state = states.HANDSHAKING, isServer = false, packetsToParse = {\"packet\": true} } = {}) {\n    super({ readableObjectMode: true });\n    this.protocolState = state;\n    this.isServer = isServer;\n    this.packetsToParse = packetsToParse;\n  }\n\n  _transform(chunk, enc, cb) {\n    var packet;\n    try {\n      packet = parsePacketData(chunk, this.protocolState, this.isServer, this.packetsToParse);\n    } catch (e) {\n      return cb(e);\n    }\n    if (packet.error)\n    {\n      packet.error.packet = packet;\n      return cb(packet.error)\n    }\n    else\n    {\n      this.push(packet);\n      return cb();\n    }\n  }\n}\n"],"sourceRoot":"/source/"}