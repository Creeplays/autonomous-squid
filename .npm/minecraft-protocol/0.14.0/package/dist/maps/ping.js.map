{"version":3,"sources":["ping.js"],"names":[],"mappings":";;AAAA,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC;IACpB,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC;IAC5B,MAAM,GAAG,OAAO,CAAC,yBAAyB,CAAC,CAAC,MAAM,CACnD;;AAEH,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;;AAEtB,SAAS,IAAI,CAAC,OAAO,EAAE,EAAE,EAAE;AACzB,MAAI,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,WAAW,CAAC;AACvC,MAAI,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,KAAK,CAAC;;AAEjC,MAAI,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;AAC1B,QAAM,CAAC,EAAE,CAAC,OAAO,EAAE,UAAS,GAAG,EAAE;AAC/B,MAAE,CAAC,GAAG,CAAC,CAAC;GACT,CAAC,CAAC;;AAEH,QAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAI,CAAC,EAAE,UAAS,MAAM,EAAE;AAClD,QAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AACvC,QAAI,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACvB,UAAM,CAAC,IAAI,CAAC,CAAI,EAAE,UAAS,MAAM,EAAE;AACjC,UAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC;AAClC,QAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACf,YAAM,CAAC,GAAG,EAAE,CAAC;KACd,CAAC,CAAC;AACH,UAAM,CAAC,KAAK,CAAC,CAAI,EAAE,EAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC;GACpC,CAAC,CAAC;;AAEH,QAAM,CAAC,EAAE,CAAC,OAAO,EAAE,UAAS,QAAQ,EAAE;AACpC,QAAG,QAAQ,KAAK,MAAM,CAAC,MAAM,EAC3B,MAAM,CAAC,KAAK,CAAC,CAAI,EAAE,EAAE,CAAC,CAAC;GAC1B,CAAC,CAAC;;AAEH,QAAM,CAAC,EAAE,CAAC,SAAS,EAAE,YAAW;AAC9B,UAAM,CAAC,KAAK,CAAC,CAAI,EAAE;AACjB,qBAAe,EAAE,CAAC;AAClB,gBAAU,EAAE,IAAI;AAChB,gBAAU,EAAE,IAAI;AAChB,eAAS,EAAE,CAAC;KACb,CAAC,CAAC;AACH,UAAM,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;GAC9B,CAAC,CAAC;;AAEH,QAAM,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;CAC5B","file":"ping.js","sourcesContent":["var net = require('net')\n  , Client = require('./client')\n  , states = require('./transforms/serializer').states\n  ;\n\nmodule.exports = ping;\n\nfunction ping(options, cb) {\n  var host = options.host || 'localhost';\n  var port = options.port || 25565;\n\n  var client = new Client();\n  client.on('error', function(err) {\n    cb(err);\n  });\n\n  client.once([states.STATUS, 0x00], function(packet) {\n    var data = JSON.parse(packet.response);\n    var start = Date.now();\n    client.once(0x01, function(packet) {\n      data.latency = Date.now() - start;\n      cb(null, data);\n      client.end();\n    });\n    client.write(0x01, {time: [0, 0]});\n  });\n\n  client.on('state', function(newState) {\n    if(newState === states.STATUS)\n      client.write(0x00, {});\n  });\n\n  client.on('connect', function() {\n    client.write(0x00, {\n      protocolVersion: 4,\n      serverHost: host,\n      serverPort: port,\n      nextState: 1\n    });\n    client.state = states.STATUS;\n  });\n\n  client.connect(port, host);\n}\n"],"sourceRoot":"/source/"}