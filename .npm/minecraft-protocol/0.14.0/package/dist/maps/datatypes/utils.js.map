{"version":3,"sources":["datatypes/utils.js"],"names":[],"mappings":"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","file":"datatypes/utils.js","sourcesContent":["var assert = require('assert');\n\nvar getField = require(\"../utils\").getField;\n\nmodule.exports = {\n  'varint': [readVarInt, writeVarInt, sizeOfVarInt],\n  'bool': [readBool, writeBool, 1],\n  'string': [readString, writeString, sizeOfString],\n  'buffer': [readBuffer, writeBuffer, sizeOfBuffer]\n};\n\nfunction readVarInt(buffer, offset) {\n  var result = 0;\n  var shift = 0;\n  var cursor = offset;\n\n  while(true) {\n    if(cursor + 1 > buffer.length) return null;\n    var b = buffer.readUInt8(cursor);\n    result |= ((b & 0x7f) << shift); // Add the bits to our number, except MSB\n    cursor++;\n    if(!(b & 0x80)) { // If the MSB is not set, we return the number\n      return {\n        value: result,\n        size: cursor - offset\n      };\n    }\n    shift += 7; // we only have 7 bits, MSB being the return-trigger\n    assert.ok(shift < 64, \"varint is too big\"); // Make sure our shift don't overflow.\n  }\n}\n\nfunction sizeOfVarInt(value) {\n  var cursor = 0;\n  while(value & ~0x7F) {\n    value >>>= 7;\n    cursor++;\n  }\n  return cursor + 1;\n}\n\nfunction writeVarInt(value, buffer, offset) {\n  var cursor = 0;\n  while(value & ~0x7F) {\n    buffer.writeUInt8((value & 0xFF) | 0x80, offset + cursor);\n    cursor++;\n    value >>>= 7;\n  }\n  buffer.writeUInt8(value, offset + cursor);\n  return offset + cursor + 1;\n}\n\n\nfunction readString(buffer, offset) {\n  var length = readVarInt(buffer, offset);\n  if(!!!length) return null;\n  var cursor = offset + length.size;\n  var stringLength = length.value;\n  var strEnd = cursor + stringLength;\n  if(strEnd > buffer.length) return null;\n\n  var value = buffer.toString('utf8', cursor, strEnd);\n  cursor = strEnd;\n\n  return {\n    value: value,\n    size: cursor - offset,\n  };\n}\n\nfunction writeString(value, buffer, offset) {\n  var length = Buffer.byteLength(value, 'utf8');\n  offset = writeVarInt(length, buffer, offset);\n  buffer.write(value, offset, length, 'utf8');\n  return offset + length;\n}\n\n\nfunction sizeOfString(value) {\n  var length = Buffer.byteLength(value, 'utf8');\n  return sizeOfVarInt(length) + length;\n}\n\nfunction readBool(buffer, offset) {\n  if(offset + 1 > buffer.length) return null;\n  var value = buffer.readInt8(offset);\n  return {\n    value: !!value,\n    size: 1,\n  };\n}\n\nfunction writeBool(value, buffer, offset) {\n  buffer.writeInt8(+value, offset);\n  return offset + 1;\n}\n\n\nfunction readBuffer(buffer, offset, typeArgs, rootNode) {\n  var count = getField(typeArgs.count, rootNode);\n  return {\n    value: buffer.slice(offset, offset + count),\n    size: count\n  };\n}\n\nfunction writeBuffer(value, buffer, offset) {\n  value.copy(buffer, offset);\n  return offset + value.length;\n}\n\nfunction sizeOfBuffer(value) {\n  return value.length;\n}\n"],"sourceRoot":"/source/"}